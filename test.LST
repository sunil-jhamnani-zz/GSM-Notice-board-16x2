C51 COMPILER V8.02   TEST                                                                  06/21/2014 12:40:56 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE TEST
OBJECT MODULE PLACED IN test.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE test.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #include<string.h>
   3          sbit rs=P1^0;
   4          sbit en=P1^1;
   5          sbit led=P1^0;
   6          void lcd_cmd(unsigned char x1);
   7          void lcd_data(unsigned char x2);
   8          void delay(unsigned int time);
   9          void lcd_string(unsigned char *str);
  10          void send_byte(unsigned char ch);
  11          unsigned char recv_byte();
  12          void enter();
  13          void signal();
  14          void string_hypr(unsigned char *str);
  15          unsigned char message[40];
  16          char i,j,l,z;
  17          int c,t,m=0,n=0;
  18          void main()
  19          {
  20   1       led=0;
  21   1       TMOD=0x20;
  22   1       SCON=0x50;
  23   1       TH1=0xfd;
  24   1       TR1=1;
  25   1       delay(50);
  26   1       lcd_cmd(0x38);
  27   1       lcd_cmd(0x0c);
  28   1       lcd_cmd(0x01);
  29   1       lcd_cmd(0x80);
  30   1       lcd_string("Wireless");
  31   1       lcd_cmd(0xc2);
  32   1       lcd_string("Notice Board");
  33   1       string_hypr("AT");
  34   1       enter();
  35   1       delay(50);
  36   1       string_hypr("ATE0");
  37   1       enter();
  38   1       delay(50);
  39   1       string_hypr("AT+CMGF=1");
  40   1       enter();
  41   1       delay(50);
  42   1       
  43   1       while(1)
  44   1       {
  45   2        string_hypr("AT+CMGD=1");
  46   2        enter();
  47   2        delay(50);
  48   2        i=0;j=0;l=0;
  49   2        do
  50   2        {
  51   3         i=recv_byte();
  52   3        }while(i!='+');
  53   2        delay(500);
  54   2        signal();
  55   2        string_hypr("AT+CMGR=1");
C51 COMPILER V8.02   TEST                                                                  06/21/2014 12:40:56 PAGE 2   

  56   2        enter();
  57   2        delay(2);
  58   2        do
  59   2        {
  60   3         i=recv_byte();
  61   3        }while(i!='*');
  62   2        
  63   2        do
  64   2        {
  65   3         j=recv_byte();
  66   3         message[l++]=j;
  67   3        }while(j!='#');
  68   2        message[--l]='\0';
  69   2        z=strlen(message);
  70   2        lcd_cmd(0x01);
  71   2                           if(z>16)
  72   2                                                      {
  73   3                                                      lcd_cmd(0x80);
  74   3                                                      delay(10);
  75   3      
  76   3                                                      for(i=0;i<16;i++)
  77   3                                                      {
  78   4                                                              
  79   4                                                              lcd_data(message[i]);
  80   4                                                              
  81   4                                                              }
  82   3                                                      lcd_cmd(0xc0);
  83   3                                                      delay(10);
  84   3      
  85   3                                                      for(i=16;i<z;i++)
  86   3                                                          {
  87   4                                                              lcd_data(message[i]);
  88   4                                                              delay(10);
  89   4                                                              }
  90   3                                                      }
  91   2                                                      
  92   2                                                      else{
  93   3                                                       lcd_cmd(0x80);
  94   3                                                       delay(10);
  95   3      
  96   3                                                      for(i=0;i<z;i++)
  97   3                                                      {
  98   4                                                              
  99   4                                                              lcd_data(message[i]);
 100   4                                                              delay(10);
 101   4                                                              }
 102   3      
 103   3                                                        }
 104   2        delay(30);
 105   2       }
 106   1      }
 107          void send_byte(unsigned char ch)
 108          {
 109   1         
 110   1         SBUF = ch;
 111   1         while(!TI);
 112   1         TI = 0;
 113   1       
 114   1      }
 115          unsigned char recv_byte()
 116          {
 117   1         unsigned char c;
C51 COMPILER V8.02   TEST                                                                  06/21/2014 12:40:56 PAGE 3   

 118   1         while(!RI);                 
 119   1         c = SBUF;
 120   1         RI = 0;
 121   1         return(c);
 122   1      }
 123          void string_hypr(unsigned char *str)
 124          {
 125   1         while(*str != '\0')
 126   1         {
 127   2            send_byte(*str);
 128   2                str++;
 129   2         }
 130   1      }
 131          void enter()
 132          {
 133   1         send_byte(0x0d);
 134   1         send_byte(0x0a);
 135   1      }
 136          
 137          void signal()
 138          {
 139   1        led=1;
 140   1        delay(20);
 141   1        led=0;
 142   1        delay(20);
 143   1        led=1;
 144   1        delay(20);
 145   1        led=0;
 146   1        delay(20);
 147   1        led=1;
 148   1        delay(20);
 149   1        led=0;
 150   1        delay(20);
 151   1      }
 152          
 153          void lcd_cmd(unsigned char x1)
 154          {
 155   1       P0=x1;
 156   1       rs=0;
 157   1       en=1;
 158   1       en=0;
 159   1       delay(1);
 160   1      }
 161          void lcd_data(unsigned char x2)
 162          {
 163   1       P0=x2;
 164   1       rs=1;
 165   1       en=1;
 166   1       en=0;
 167   1       delay(1);
 168   1      }
 169          void lcd_string(unsigned char *str)
 170          {
 171   1              int i,j,k;
 172   1              j=strlen(str);
 173   1              lcd_cmd(0x80);
 174   1              delay(100);
 175   1              lcd_cmd(0x01);
 176   1              delay(100);
 177   1              if(strlen(str)<16)
 178   1              {
 179   2                      for(i=0;str[i]!='\0';i++)
C51 COMPILER V8.02   TEST                                                                  06/21/2014 12:40:56 PAGE 4   

 180   2                      {
 181   3                              lcd_data(str[i]);
 182   3                              delay(100);
 183   3                      }
 184   2              }
 185   1              else
 186   1              {
 187   2                      for(i=0;i<16;i++)
 188   2                      {
 189   3                              lcd_data(str[i]);
 190   3                              delay(100);
 191   3                      }
 192   2                      for(i=1,j=16;str[j]!='\0';i++,j++)
 193   2                      {
 194   3                       lcd_cmd(0x80);
 195   3                       lcd_cmd(0x01);
 196   3                       for(k=i;k<=j;k++)
 197   3                       {
 198   4                              lcd_data(str[k]);
 199   4                              delay(100);
 200   4                       }
 201   3                       delay(1300);
 202   3                      }
 203   2              }
 204   1      }
 205          void delay(unsigned int time)
 206          { 
 207   1       int x,y;
 208   1       for(x=0;x<time;x++)
 209   1       for(y=0;y<1275;y++);
 210   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    796    ----
   CONSTANT SIZE    =     60    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     52       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
